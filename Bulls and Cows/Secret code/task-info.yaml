type: edu
files:
- name: src/bullscows/Main.java
  visible: true
  text: |
    package bullscows;

    public class Main {
        public static void main(String[] args) {
            System.out.println("Hello World!");
        }
    }
  learner_created: false
- name: test/BullsCowsTest.java
  visible: false
  text: |-
    import bullscows.Main;
    import org.hyperskill.hstest.dynamic.input.DynamicTestingMethod;
    import org.hyperskill.hstest.stage.StageTest;
    import org.hyperskill.hstest.testcase.CheckResult;
    import org.hyperskill.hstest.testing.TestedProgram;

    import java.util.ArrayList;
    import java.util.Arrays;
    import java.util.LinkedHashSet;
    import java.util.List;
    import java.util.stream.Collectors;

    import static org.hyperskill.hstest.testing.expect.Expectation.expect;

    public class BullsCowsTest extends StageTest<String> {

        // basic test case
        @DynamicTestingMethod
        CheckResult test1() {
            TestedProgram main = new TestedProgram();
            main.start();
            String output = main.execute("4").toLowerCase().trim();

            return outputCheck(output, 4);
        }

        @DynamicTestingMethod
        CheckResult test2() {
            TestedProgram main = new TestedProgram();
            main.start();
            String output = main.execute("1").toLowerCase().trim();

            return outputCheck(output, 1);
        }

        // test of incorrect input
        @DynamicTestingMethod
        CheckResult test4() {
            TestedProgram main = new TestedProgram();
            main.start();
            String output = main.execute("11").toLowerCase().trim();

            return outputCheck(output, 11);
        }

        @DynamicTestingMethod
        CheckResult test5() {
            TestedProgram main = new TestedProgram();
            main.start();
            String output = main.execute("6").toLowerCase().trim();

            return outputCheck(output, 6);
        }

        @DynamicTestingMethod
        CheckResult test6() {
            TestedProgram main = new TestedProgram();
            main.start();
            String output = main.execute("3").toLowerCase().trim();

            return outputCheck(output, 3);
        }


        CheckResult outputCheck(String source, int length) {

            if (length > 10) {
                if (source.toLowerCase().contains("error")) {
                    return CheckResult.correct();
                } else {
                    return CheckResult.wrong("An error message expected with input " +
                            "\"" + length + "\"");
                }
            }

            List<Integer> integers = expect(source).toContain(1).integers();
            source = "" + integers.get(0);

            if (source.length() != length) {
                return CheckResult.wrong("The output number of your program has " +
                        "an incorrect length (found " + source.length() + ")");
            }

            List<Integer> temp = stringToArrayOfNumbers(source);
            temp = new ArrayList<>(new LinkedHashSet<>(temp));

            if (temp.toArray().length != source.length()) {
                return CheckResult.wrong("Digits in the generated number are not unique.");
            }

            return CheckResult.correct();
        }

        private static List<Integer> stringToArrayOfNumbers(String array) {
            return Arrays.stream(array.split(""))
                    .map(Integer::parseInt)
                    .collect(Collectors.toList());
        }
    }
  learner_created: false
- name: src/bullscows/core/grader/Grader.java
  visible: true
  text: |
    package bullscows.grader;

    import java.util.*;
    import java.util.stream.Collectors;

    public class Grader {
        private static Scanner scanner = new Scanner(System.in);
        private List<Character> secretCodeForCheck;
        private String secretCode;
        private  List<Character> guessAnswer;
        private int cowsCount;
        private int bullsCount;
        private List<Character> bulls;
        private List<Character> cows;

        public Grader(String secretCode){
            this.secretCodeForCheck = secretCode.chars().mapToObj(c -> (char)c).collect(Collectors.toList());
            this.secretCode = secretCode;
            this.bulls = new ArrayList<>();
            this.cows = new ArrayList<>();
            this.guessAnswer = new ArrayList<>();
           }

        public  Grader() {
        }

        public void start(){
            setGuessAnswer(scanner.next());
            findBullsAndCows();
            print();
        }

        public void setGuessAnswer(String guessAnswer) {
            this.guessAnswer = guessAnswer.chars().mapToObj(c -> (char)c).collect(Collectors.toList());
        }
        void findBullsAndCows(){
         for (int i =0;i<secretCodeForCheck.size();i++){
             if (secretCodeForCheck.get(i).equals(guessAnswer.get(i))) bullsCount++;
             if (!bulls.contains(guessAnswer.get(i))) {
                 if (secretCodeForCheck.contains(guessAnswer.get(i))){
                     cowsCount++;
                     bulls.add(guessAnswer.get(i));
                 }
             }
         }
        }

        void print(){
            if (cowsCount == 0 & bullsCount ==0) System.out.printf("Grade: None. The secret code is %s\n",secretCode);
            else if (bullsCount ==4) System.out.printf("Grade: 4 bulls. The secret code is %s.\n",secretCode);
            else if (bullsCount == 0) System.out.printf("Grade: %d cow(s). The secret code is %s.\n",cowsCount,secretCode);
            else if (cowsCount == 0) System.out.printf("Grade: %d cow(s). The secret code is %s.\n",bullsCount,secretCode);
            else System.out.printf("Grade: %d bull(s) and %d cow(s). The secret code is %s.\n",bullsCount,cowsCount,secretCode);
        }






    }
  learner_created: true
- name: src/bullscows/core/grader/SecretCodeGenerator.java
  visible: true
  learner_created: true
feedback_link: https://hyperskill.org/projects/53/stages/289/implement#comment
status: Solved
feedback:
  message: Congratulations!
  time: Sun, 08 Aug 2021 19:08:08 UTC
record: 3
